name: "API Tests & Analysis"

on:
  push:
    branches: 
      - 'main'
    paths:
      - 'src/FinancialHub/*' 
      - 'src/FinancialHub/**'
  pull_request:
    branches: 
      - 'main'
      - 'release/**'
    #paths:
    #  - 'src/FinancialHub/*' 
    #  - 'src/FinancialHub/**'


env:
  project-dir: ./src/FinancialHub/
  project-tests-dir: ./src/FinancialHub/ # for now it has no distiction
  project-tests-results-dir: ./src/FinancialHub/TestResult # for now it has no distiction

permissions:
  checks: write
  pull-requests: write

jobs: 
  
  tests:
    name: Build & Test
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ env.project-dir }}

    services:
      sql-database: 
        image: mcr.microsoft.com/mssql/server:2019-latest    
        env: 
          SA_PASSWORD: "P@ssw0rd!"
          ACCEPT_EULA: "Y"
        ports: 
          - 1450:1433

    steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
        
    - uses: actions/checkout@v2
    
    - name: Restore dependencies
      run: dotnet restore
          
    - name: Run Tests
      continue-on-error: true 
      run: dotnet test 
        --logger:"trx;logfilename=Results.xml" 
        --configuration release
  
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/composite@v2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        action_fail: true
        files: "**/TestResults/Results.xml"

    - name: Run Coverage Report
      continue-on-error: true 
      run: dotnet test 
        --collect:"XPlat Code Coverage;Format=opencover" 
        --results-directory TestResults/ 
        --configuration release 
        --no-build

    - name: Publish Coverage Report
      uses: actions/cache/save@v3
      id: cache
      with:
        path: TestResults/**
        enableCrossOsArchive: true
        key: ${{ runner.os }}-coverage-report


  code_analysis:
    name: Code analysis
    needs: tests
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ env.project-dir }}
              
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: actions/cache/restore@v3
      id: cache-coverage-report-cache
      with:
        path: /TestResults
        key: cache-coverage-report
        enableCrossOsArchive: true
        fail-on-cache-miss: true

    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN:  ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: ${{ env.project-dir }}
        args: >
          -Dsonar.organization=chingling-152
          -Dsonar.projectKey=Chingling152_my-financial-hub
          -Dsonar.cs.opencover.reportsPaths="${{ env.project-tests-results-dir }}/**/coverage.opencover.xml" 
          -Dsonar.verbose=true

  code_analysis_2:
    name: Code Analysis 2
    needs: code_analysis
    runs-on: windows-latest   
    
    defaults:
      run:
        working-directory: ./src/FinancialHub/
            
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
        
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      - uses: actions/cache/restore@v3
        with:
          path: /TestResults/
          key: cache-coverage-report
          enableCrossOsArchive: true
          fail-on-cache-miss: true
                      
      - name: Build and analyze
        shell: powershell
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
          /k:"Chingling152_my-financial-hub" `
          /o:"chingling-152" `
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
          /d:sonar.host.url="https://sonarcloud.io" `
          /d:sonar.coverage.exclusions="**/Migrations/." `
          /d:sonar.verbose=true `
          /d:sonar.cs.opencover.reportsPaths="/TestResults/**/coverage.opencover.xml" 
          
          echo "Restore dependencies"
          dotnet restore

          echo "build project"
          dotnet build --configuration Release --no-restore

          .\.sonar\scanner\dotnet-sonarscanner end `
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
    