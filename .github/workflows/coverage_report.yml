name: Api Coverage

on:
  workflow_call:    
    inputs:
      dir:
        type: string
        required: true
      dotnet-version: 
        type: string
        default: 6.0.x

permissions:
  pull-requests: read

jobs:
  code_analysis:
    name: Code coverage
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ inputs.dir }}

    services:
      sql-database: 
        image: mcr.microsoft.com/mssql/server:2019-latest    
        env: 
          SA_PASSWORD: "P@ssw0rd!"
          ACCEPT_EULA: "Y"
        ports: 
          - 1450:1433
    
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Setup Project
        uses: ./.github/actions/build-dotnet-project
        with: 
          project-dir: ${{ inputs.dir }}
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Dotnet restore tools
        run: dotnet tool restore 
        
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
        
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner    

      - name: Begin Coverage Report
        run: 
          dotnet tool run dotnet-sonarscanner begin 
          /k:"My-Financial-Hub_core-api" 
          /o:"my-financial-hub" 
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}" 
          /d:sonar.host.url="https://sonarcloud.io" 
          /d:sonar.coverage.exclusions="**/Migrations/." 
          /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" 
      
      - name: Build Project
        run: dotnet build 
          --configuration Release 
          --no-restore

      - name: Run Coverage Report
        continue-on-error: true 
        run: dotnet test 
          --collect:"XPlat Code Coverage;Format=opencover" 
          --results-directory TestResults/ 
          --filter "TestCategory=Unit|TestCategory=Integration"
          --configuration Release 

      - name: Send Coverage Report
        run: 
          dotnet tool run dotnet-sonarscanner end 
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
        
