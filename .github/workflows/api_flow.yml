name: "Base API Routine"

on:
  push:
    branches: 
      - 'main'
    paths:
      - 'src/FinancialHub/*' 
      - 'src/FinancialHub/**'
  pull_request:
    branches: 
      - 'main'
      - 'release/**'
    #paths:
    #  - 'src/FinancialHub/*' 
    #  - 'src/FinancialHub/**'

permissions:
  checks: write
  pull-requests: write

jobs: 
  tests:
    name: Build & Test
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src/FinancialHub/

    services:
      sql-database: 
        image: mcr.microsoft.com/mssql/server:2019-latest    
        env: 
          SA_PASSWORD: "P@ssw0rd!"
          ACCEPT_EULA: "Y"
        ports: 
          - 1450:1433

    steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
        
    - uses: actions/checkout@v2
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Test
      run: | 
        dotnet test `
        --collect:"XPlat Code Coverage" `
        --results-directory TestResults/ `
        --configuration release `
        -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover `

    - name: Publish Test Results
      if: always()
      uses: EnricoMi/publish-unit-test-result-action@v2.8.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        action_fail: true
        files: |
          TestResults/**/coverage.opencover.xml

  #code_analysis:
  #  name: Code Analysis
  #  needs: tests
  #  runs-on: windows-latest   
  #  
  #  defaults:
  #    run:
  #      working-directory: ./src/FinancialHub/
  #          
  #  steps:
  #    - name: Set up JDK 11
  #      uses: actions/setup-java@v1
  #      with:
  #        java-version: 1.11
  #    - uses: actions/checkout@v2
  #      with:
  #        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
  #    - name: Cache SonarCloud packages
  #      uses: actions/cache@v1
  #      with:
  #        path: ~\sonar\cache
  #        key: ${{ runner.os }}-sonar
  #        restore-keys: ${{ runner.os }}-sonar
  #      
  #    - name: Cache SonarCloud scanner
  #      id: cache-sonar-scanner
  #      uses: actions/cache@v1
  #      with:
  #        path: .\.sonar\scanner
  #        key: ${{ runner.os }}-sonar-scanner
  #        restore-keys: ${{ runner.os }}-sonar-scanner
  #        
  #    - name: Install SonarCloud scanner
  #      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
  #      shell: powershell
  #      run: |
  #        New-Item -Path .\.sonar\scanner -ItemType Directory
  #        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
  #        
  #    - name: Setup .NET
  #      uses: actions/setup-dotnet@v2
  #      with:
  #        dotnet-version: 6.0.x
  #  
  #    - name: Restore dependencies
  #      run: dotnet restore
  #                    
  #    - name: Build and analyze
  #      env:
  #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
  #        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #      shell: powershell
  #      run: |
  #        .\.sonar\scanner\dotnet-sonarscanner begin `
  #        /k:"Chingling152_my-financial-hub" `
  #        /o:"chingling-152" `
  #        /d:sonar.login="${{ secrets.SONAR_TOKEN }}" `
  #        /d:sonar.host.url="https://sonarcloud.io" `
  #        /d:sonar.coverage.exclusions="**/Migrations/." `
  #        /d:sonar.cs.opencover.reportsPaths="/TestResults/**/coverage.opencover.xml" 
  #        
  #        echo "build project"
  #        dotnet build --configuration Release --no-restore
  #  
  #        echo "running code coverage"
  #        dotnet test `
  #        --collect:"XPlat Code Coverage" `
  #        --results-directory TestResults/ `
  #        --configuration release `
  #        -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover `
  #  
  #        .\.sonar\scanner\dotnet-sonarscanner end `
  #        /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
    