name: "Matrix Tests & Analysis"

on:
  pull_request:
    branches: 
      - 'release/**'

permissions:
  checks: write
  pull-requests: write

jobs: 
  tests:
    name: Tests
    runs-on: ubuntu-latest
    services:
      sql-database: 
        image: mcr.microsoft.com/mssql/server:2019-latest    
        env: 
          SA_PASSWORD: "P@ssw0rd!"
          ACCEPT_EULA: "Y"
        ports: 
          - 1450:1433
    strategy:
      max-parallel: 1
      matrix:
        project: 
          - core
          - auth
    steps:
      - uses: actions/checkout@v2

      - name: Setup Project
        uses: ./.github/actions/build-dotnet-project
        with: 
          project-dir: ./src/api/${{ matrix.project }}
          dotnet-version: 6.0.x

      - name: Run Unit Tests
        uses: ./.github/actions/run-tests
        with: 
          project-dir: ./src/api/${{ matrix.project }}
          category: Unit
    
      - name: Run Integration Tests
        uses: ./.github/actions/run-tests
        with: 
          project-dir: ./src/api/${{ matrix.project }}
          category: Integration

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: ${{ matrix.project }} project test results
          action_fail: true
          files: "./tests/${{ matrix.project }}/**/TestResults/Results.xml"

  code_analysis:
    name: Code Analysis
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src/api

    services:
      sql-database: 
        image: mcr.microsoft.com/mssql/server:2019-latest    
        env: 
          SA_PASSWORD: "P@ssw0rd!"
          ACCEPT_EULA: "Y"
        ports: 
          - 1450:1433

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Dotnet restore tools
        run: dotnet tool restore 

      - name: Cache Sonar Package & Sonar Scanner
        uses: ./.github/actions/cache-sonar
        with: 
          os: ${{ runner.os }}

      - name: Begin Coverage Report
        run: 
          dotnet tool run dotnet-sonarscanner begin 
          /k:"Chingling152_my-financial-hub" 
          /o:"chingling-152" 
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}" 
          /d:sonar.host.url="https://sonarcloud.io" 
          /d:sonar.coverage.exclusions="**/Migrations/." 
          /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" 
      
      - name: Build Project
        run: dotnet build 
          --configuration Release 
          --no-restore

      - name: Run Coverage Report
        continue-on-error: true 
        run: dotnet test 
          --collect:"XPlat Code Coverage;Format=opencover" 
          --results-directory TestResults/ 
          --configuration Release 

      - name: Send Coverage Report
        run: 
          dotnet tool run dotnet-sonarscanner end 
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}"